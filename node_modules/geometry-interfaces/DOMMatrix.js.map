{"version":3,"file":"DOMMatrix.js","sources":["../src/DOMMatrix.js"],"sourcesContent":["import DOMMatrixReadOnly, {initDOMMatrixReadOnly} from './DOMMatrixReadOnly'\nimport {\n    multiplyAndApply,\n    rotateAxisAngleArray,\n} from './utilities'\n\ninitDOMMatrixReadOnly()\n\nexport default\nclass DOMMatrix extends DOMMatrixReadOnly {\n    constructor(arg) {\n        const numArgs = arguments.length\n        if (numArgs === 0) {\n            super([1, 0, 0, 1, 0, 0])\n        }\n        else if (numArgs === 1) {\n            if (typeof arg == 'string') {\n                throw new Error('CSS transformList arg not yet implemented.')\n                // TODO validate that syntax of transformList matches transform-list (http://www.w3.org/TR/css-transforms-1/#typedef-transform-list).\n            }\n            else if (arg instanceof DOMMatrix) {\n                super(arg._matrix)\n            }\n            else if (arg instanceof Float32Array || arg instanceof Float64Array || arg instanceof Array) {\n                super(arg)\n            }\n        }\n        else {\n            throw new Error('Wrong number of arguments to DOMMatrix constructor.')\n        }\n    }\n\n    // Mutable transform methods\n    multiplySelf (other) {\n        if (!(other instanceof DOMMatrix))\n            throw new Error('The argument to multiplySelf must be an instance of DOMMatrix')\n\n        // TODO: avoid creating a new array, just apply values directly.\n        multiplyAndApply(this, other, this)\n\n        if (!other.is2D) this._is2D = false\n\n        return this\n    }\n\n    preMultiplySelf (other) {\n        if (!(other instanceof DOMMatrix))\n            throw new Error('The argument to multiplySelf must be an instance of DOMMatrix')\n\n        // TODO: avoid creating a new array, just apply values directly.\n        multiplyAndApply(other, this, this)\n\n        if (!other.is2D) this._is2D = false\n\n        return this\n    }\n\n    translateSelf (tx, ty, tz = 0) {\n        // TODO: check args are numbers\n\n        if (arguments.length === 1)\n            throw new Error('The first two arguments (X and Y translation values) are required (the third, Z translation, is optional).')\n\n        // http://www.w3.org/TR/2012/WD-css3-transforms-20120911/#Translate3dDefined\n        const translationMatrix = new DOMMatrix([\n            // column-major:\n            1, 0, 0, 0,\n            0, 1, 0, 0,\n            0, 0, 1, 0,\n            tx,ty,tz,1,\n        ])\n\n        this.multiplySelf(translationMatrix)\n\n        if (tz != 0) {\n            this._is2D = false\n        }\n\n        return this\n    }\n\n    scaleSelf (scale, originX = 0, originY = 0) {\n        this.translateSelf(originX, originY)\n\n        this.multiplySelf(new DOMMatrix([\n            // 2D:\n            /*a*/scale, /*b*/0,\n            /*c*/0,     /*d*/scale,\n            /*e*/0,     /*f*/0,\n        ]))\n\n        this.translateSelf(-originX, -originY)\n        return this\n    }\n\n    scale3dSelf (scale, originX = 0, originY = 0, originZ = 0) {\n        this.translateSelf(originX, originY, originZ)\n\n        this.multiplySelf(new DOMMatrix([\n            // 3D\n            scale, 0,     0,     0,\n            0,     scale, 0,     0,\n            0,     0,     scale, 0,\n            0,     0,     0,     1,\n        ]))\n\n        this.translateSelf(-originX, -originY, -originZ)\n        return this\n    }\n\n    scaleNonUniformSelf (scaleX, scaleY = 1, scaleZ = 1, originX = 0, originY = 0, originZ = 0) {\n        this.translateSelf(originX, originY, originZ)\n\n        this.multiplySelf(new DOMMatrix([\n            // 3D\n            scaleX, 0,      0,      0,\n            0,      scaleY, 0,      0,\n            0,      0,      scaleZ, 0,\n            0,      0,      0,      1,\n        ]))\n\n        this.translateSelf(-originX, -originY, -originZ)\n\n        if (scaleZ !== 1 || originZ !== 0) this._is2D = false\n\n        return this\n    }\n\n    rotateSelf (angle, originX = 0, originY = 0) {\n        this.translateSelf(originX, originY)\n\n        // axis of rotation\n        const [x,y,z] = [0,0,1] // We're rotating around the Z axis.\n\n        this.rotateAxisAngleSelf(x, y, z, angle)\n\n        this.translateSelf(-originX, -originY)\n        return this\n    }\n\n    // TODO\n    rotateFromVectorSelf (x, y) {\n        throw new Error('rotateFromVectorSelf is not implemented yet.')\n    }\n\n    rotateAxisAngleSelf (x, y, z, angle) {\n        const rotationMatrix = new DOMMatrix(rotateAxisAngleArray(x,y,z,angle))\n        this.multiplySelf(rotationMatrix)\n        return this\n    }\n\n    skewXSelf (sx) {\n        throw new Error('skewXSelf is not implemented yet.')\n    }\n\n    skewYSelf (sy) {\n        throw new Error('skewYSelf is not implemented yet.')\n    }\n\n    invertSelf () {\n        throw new Error('invertSelf is not implemented yet.')\n    }\n\n    setMatrixValue(/*DOMString*/ transformList) {\n        throw new Error('setMatrixValue is not implemented yet.')\n    }\n\n    get a() { return this.m11 }\n    get b() { return this.m12 }\n    get c() { return this.m21 }\n    get d() { return this.m22 }\n    get e() { return this.m41 }\n    get f() { return this.m42 }\n\n    get m11() { return this._matrix[0]  }\n    get m12() { return this._matrix[4]  }\n    get m13() { return this._matrix[8]  }\n    get m14() { return this._matrix[12] }\n\n    get m21() { return this._matrix[1]  }\n    get m22() { return this._matrix[5]  }\n    get m23() { return this._matrix[9]  }\n    get m24() { return this._matrix[13] }\n\n    get m31() { return this._matrix[2]  }\n    get m32() { return this._matrix[6]  }\n    get m33() { return this._matrix[10] }\n    get m34() { return this._matrix[14] }\n\n    get m41() { return this._matrix[3]  }\n    get m42() { return this._matrix[7]  }\n    get m43() { return this._matrix[11] }\n    get m44() { return this._matrix[15] }\n\n    set a(value) { this.m11 = value }\n    set b(value) { this.m12 = value }\n    set c(value) { this.m21 = value }\n    set d(value) { this.m22 = value }\n    set e(value) { this.m41 = value }\n    set f(value) { this.m42 = value }\n\n    set m11(value) { this._matrix[0]  = value }\n    set m12(value) { this._matrix[4]  = value }\n    set m13(value) { this._matrix[8]  = value }\n    set m14(value) { this._matrix[12] = value }\n\n    set m21(value) { this._matrix[1]  = value }\n    set m22(value) { this._matrix[5]  = value }\n    set m23(value) { this._matrix[9]  = value }\n    set m24(value) { this._matrix[13] = value }\n\n    set m31(value) { this._matrix[2]  = value }\n    set m32(value) { this._matrix[6]  = value }\n    set m33(value) { this._matrix[10] = value }\n    set m34(value) { this._matrix[14] = value }\n\n    set m41(value) { this._matrix[3]  = value }\n    set m42(value) { this._matrix[7]  = value }\n    set m43(value) { this._matrix[11] = value }\n    set m44(value) { this._matrix[15] = value }\n}\n"],"names":["super"],"mappings":"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"}